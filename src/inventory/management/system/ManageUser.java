/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventory.management.system;

import dao.ConnectionProvider;
import java.awt.Color;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author justine
 */
public class ManageUser extends javax.swing.JFrame {

    private int appuserpk = 0;
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    ResultSetMetaData rsd;

    /**
     * Creates new form ManageUser
     */
    public ManageUser() {
        initComponents();
        table_update();
    }

    private boolean validateFields(String formType) {
        if (formType.equals("edit") && !txtname.getText().equals("") && !txtphone.getText().equals("") && !txtemail.getText().equals("") && !txtaddress.getText().equals("")) {
            return false;
        } else if (formType.equals("new") && !txtname.getText().equals("") && !txtphone.getText().equals("") && !txtemail.getText().equals("") && !txtaddress.getText().equals("") && !txtpass.getText().equals("")) {
            return false;
        } else {
            return true;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUser = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtstatus = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtpass = new javax.swing.JPasswordField();
        btnsave = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        btnclose = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Impact", 1, 36)); // NOI18N
        jLabel1.setText("Manage User");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 17, -1, -1));

        tableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Mobile Number", "Email", "Address", "Status"
            }
        ));
        tableUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableUser);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 80, -1, 484));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 80, -1, -1));

        txtname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 114, 315, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Mobile Number");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 154, -1, -1));

        txtphone.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtphone, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 188, 315, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Email");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 228, -1, -1));

        txtemail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 262, 315, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Address");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 302, -1, -1));

        txtaddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 336, 315, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Password");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 376, -1, -1));

        txtstatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "InActive" }));
        getContentPane().add(txtstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 484, 310, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Status");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 450, -1, -1));

        txtpass.setBackground(new java.awt.Color(255, 255, 255));
        txtpass.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 410, 315, -1));

        btnsave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(478, 524, 60, -1));

        btnupdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 524, 80, -1));

        btnreset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnreset.setText("Reset");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });
        getContentPane().add(btnreset, new org.netbeans.lib.awtextra.AbsoluteConstraints(646, 524, 70, -1));

        btnclose.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnclose.setText("Close");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnclose, new org.netbeans.lib.awtextra.AbsoluteConstraints(726, 524, 60, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/All_page_Background.png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // load data to table
    // event generated after tthe window is displayed
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown


    }//GEN-LAST:event_formComponentShown

    // save button
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String name = txtname.getText();
        String phone = txtphone.getText();
        String email = txtemail.getText();
        String password = new String(txtpass.getPassword());
        String address = txtaddress.getText();
        String status = txtstatus.getSelectedItem().toString();

        if (validateFields("new")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
            return;
        }
        if (!isValidPassword(password)) {
            JOptionPane.showMessageDialog(null, "Password must contain at least:\n- 8 characters\n- One uppercase letter\n- One lowercase letter\n- One digit\n- One special character (@, #, $, etc.)", "Password Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            conn = ConnectionProvider.getConn();

            String hashedPassword = hashPassword(password);
            try {
                pst = conn.prepareStatement("insert into appuser(userRole, name, mobileNumber, email, password, address, status) values ('Admin', ?,?,?,?,?,?)");
                pst.setString(1, name);
                pst.setString(2, phone);
                pst.setString(3, email);
                pst.setString(4, hashedPassword);
                pst.setString(5, address);
                pst.setString(6, status);

                int insertedRows = pst.executeUpdate();

                if (insertedRows > 0) {
                    JOptionPane.showMessageDialog(null, "User added successfully");
                    txtname.setText("");
                    txtemail.setText("");
                    txtphone.setText("");
                    txtpass.setText("");
                    txtaddress.setText("");
                    txtstatus.setSelectedIndex(-1);
                } else {
                    JOptionPane.showMessageDialog(null, "Error adding user");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
            }
            table_update();
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    // close button
    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btncloseActionPerformed

    // populating fields if we click table row
    private void tableUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUserMouseClicked
        // TODO add your handling code here:
        int selectIndex = tableUser.getSelectedRow();

        DefaultTableModel model = (DefaultTableModel) tableUser.getModel();

        String id = model.getValueAt(selectIndex, 0).toString();
        appuserpk = Integer.parseInt(id);
        String name = model.getValueAt(selectIndex, 1).toString();
        txtname.setText(name);
        String phone = model.getValueAt(selectIndex, 2).toString();
        txtphone.setText(phone);
        String email = model.getValueAt(selectIndex, 3).toString();
        txtemail.setText(email);
        String address = model.getValueAt(selectIndex, 4).toString();
        txtaddress.setText(address);
        String status = model.getValueAt(selectIndex, 5).toString();
        txtstatus.setSelectedItem(status);

        txtpass.setEditable(false);
        txtpass.setBackground(Color.DARK_GRAY);

        btnsave.setEnabled(false);
        btnupdate.setEnabled(true);
    }//GEN-LAST:event_tableUserMouseClicked

    // update button
    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        String name = txtname.getText();
        String phone = txtphone.getText();
        String email = txtemail.getText();
        String address = txtaddress.getText();
        String status = txtstatus.getSelectedItem().toString();

        if (validateFields("edit")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
        } else {
            conn = ConnectionProvider.getConn();

            try {
                pst = conn.prepareStatement("update appuser set name=?, mobileNumber=?, email=?, address=?, status=? where appuser_pk=?");
                pst.setString(1, name);
                pst.setString(2, phone);
                pst.setString(3, email);
                pst.setString(4, address);
                pst.setString(5, status);
                pst.setInt(6, appuserpk);

                int updatedRows = pst.executeUpdate();

                if (updatedRows > 0) {
                    JOptionPane.showMessageDialog(null, "User updated successfully");
                    txtname.setText("");
                    txtemail.setText("");
                    txtphone.setText("");
                    txtpass.setText("");
                    txtaddress.setText("");
                    txtstatus.setSelectedIndex(-1);
                } else {
                    JOptionPane.showMessageDialog(null, "Error updating user");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    pst.close();
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Error closing connection");
                }

            }
            btnsave.setEnabled(true);
            btnupdate.setEnabled(false);
            txtpass.setEditable(true);
            table_update();
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    // reset button
    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        // TODO add your handling code here:
        txtname.setText("");
        txtemail.setText("");
        txtphone.setText("");
        txtpass.setText("");
        txtaddress.setText("");
        txtstatus.setSelectedIndex(-1);
    }//GEN-LAST:event_btnresetActionPerformed

    // function for updating table
    private void table_update() {
        // TODO add your handling code here:
        conn = ConnectionProvider.getConn();

        try {
            pst = conn.prepareStatement("select * from appuser where userRole='Admin'");
            rs = pst.executeQuery();

            DefaultTableModel d = (DefaultTableModel) tableUser.getModel();
            d.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();
                v2.add(rs.getString("appuser_pk"));
                v2.add(rs.getString("name"));
                v2.add(rs.getString("mobileNumber"));
                v2.add(rs.getString("email"));
                v2.add(rs.getString("address"));
                v2.add(rs.getString("status"));
                d.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
        }

        btnupdate.setEnabled(false); // disabling update button
        btnsave.setEnabled(true);
    }
    //Secure Password Hashing (SHA-256)

    private String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hash = md.digest(password.getBytes());
            StringBuilder hexString = new StringBuilder();

            for (byte b : hash) {
                hexString.append(String.format("%02x", b));
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, e);
            return null;
        }
    }
    //Password Validation Method

    private boolean isValidPassword(String password) {
        String regex = "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$%^&+=!]).{8,}$";
        return Pattern.matches(regex, password);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableUser;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtname;
    private javax.swing.JPasswordField txtpass;
    private javax.swing.JTextField txtphone;
    private javax.swing.JComboBox<String> txtstatus;
    // End of variables declaration//GEN-END:variables
}
